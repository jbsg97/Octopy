version: '3.8'

services:
    dev:
        container_name: nestjs_api_dev
        image: nestjs-api-dev:1.0.0
        build:
            context: .
            target: development
            dockerfile: ./Dockerfile
        command: npm run start:debug
        ports:
            - 3000:3000
            - 9229:9229
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
        networks:
            - core_service_network
        depends_on: 
            - db
    prod:
        container_name: nestjs_api_prod
        image: nestjs-api-prod:1.0.0
        build:
            context: .
            target: production
            dockerfile: ./Dockerfile
        command: npm run start:prod
        ports:
            - 3000:3000
            - 9229:9229
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
        networks:
            - core_service_network
        depends_on: 
            - db
    
    db:
        image: mysql:5.7.34
        volumes:
            - "./.mysql-data/db:/var/lib/mysql"
        restart: always
        ports:
            - 3306:3306
        environment:
            MYSQL_ROOT_PASSWORD: OctopyAdmin*
            MYSQL_DATABASE: Octopy
        networks:
            - core_service_network
        volumes: 
            - ./init:/docker-entrypoint-initdb.d

networks:
    core_service_network:
        driver: bridge
        name: core_service_network